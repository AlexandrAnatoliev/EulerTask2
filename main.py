# EulerTask2 - Четные числа Фибоначчи

# Каждый следующий элемент ряда Фибоначчи получается при сложении двух предыдущих.
# Начиная с 1 и 2, первые 10 элементов будут:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# Найдите сумму всех четных элементов ряда Фибоначчи, которые не превышают четыре миллиона.

def get_fib_number(n):
    """
    Функция для определения числа Фибоначчи
    :param n: номер числа в ряду
    :return: значение
    """
    f = [1, 1]
    if n <= 1:
        return 1
    else:
        for i in range(2, n + 1):
            f.append(f[i - 1] + f[i - 2])
        return f[-1]


count = 0  # счетчик номеров чисел
s = 0  # сумма чисел Фибоначчи
while get_fib_number(count) < 4000000:
    count += 1
    if get_fib_number(count) % 2 == 0 and get_fib_number(count) < 4000000:
        print(f"{count}-е число Фибонначи равно: {get_fib_number(count)}")
        s += get_fib_number(count)

print(f"Cумма всех четных элементов ряда Фибоначчи от 1 до {count - 1}, которые не превышают четыре миллиона: {s}")

print(f"Проверка: 33 число Фибоначчи: {get_fib_number(33)}")
